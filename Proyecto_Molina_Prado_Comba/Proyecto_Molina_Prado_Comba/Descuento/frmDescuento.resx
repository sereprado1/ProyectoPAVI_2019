<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnVolver.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAhCAYAAAC4JqlRAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA6/AAAOvwE4BVMkAAAEX0lE
        QVRYR8WX2W9MURzH/R2lexsaoaadaTs62lK0JfWg1PJgeUDEkgilfShRNEFoE4TQByGWSsQWUQ+2BxWU
        F2sqBK3YptOmpjUznTs/53fOPeeec++dTSTO0+29d87n+/1t53Yc/Oc17u/5mvHTiHSd5IZJCdA+l0H4
        9QwIP/FA+G4pjF13w9jFEhjrKIaxtiII7XFBaEdhUhLiCogEtoDmKwetzwZ+ToLvZfDQhgIIrXJAsG5a
        QkJiCtD8FQxu5xzhJ3XnMnwlgwfn5UOgxgGB6oKYQqIKSAh+iIQ9Dvx3VSGMzimKKsJWgAX+WMo5d47w
        3U4j7DbOOXy00g2/Kjy2IiwCbOF3prOCM8Mb9JwnAP9VVgFDpbMtIhQBmn8WaIMk5/2k4N6Sau8hzu+R
        ar9hqnYe9tU5EFpNcr6Y53wazTl1PtcFI+h8pgeGy8phyFMJvpJqGG7ar4hQBSAcq90Mv2Ctdu1Ku9iI
        FVx8uNdVC98ddfYCqHOEvzE5R/ip+H1uOC+ydf7TtYDCv05dCv15K4UIEQEBfyqF3Q6uhdmPNU1vNaPf
        R+cmBv+Us9YqgDqPB5eCJ/c55pwvf2WZknPhfMoy6hzh79M3qwLCb0jodXgYq93sfLsB0Lo6lSHDCo45
        5yt0s4sWnAKftErAe1Ma4NXEXfR1mgIFft6UcwkerMoywZ0CzqtdrjCac3RO4B9z1lHnCH8xoQl60nZK
        AkirUecI5+MVDxYJHqp3WuFkwimtVoqtVkMc6aejFokKf5jRYgigfR6j2oML861hJ3A64Ux9zsMuREQi
        wvlL4vxZWjMg/G5WqySgU+/zdn22N5ERu0k/RIa8otptW60ch8ws8LmrgfZ5wULSaktIwa0Q2Xg3fhsg
        /HlqM3Sn74Z7ma3QlX1AEoDnOYc3MjgeqXQNesWpJhfcyPJ6ARh010hw7PMVpODWiOfcuQy/mtsmCWgv
        Zqcawjfq5/kivb9RgBivarUrBUedsyGD8A8Zm8RjDHs3CTt3jvDLjhOGALwyw7HP6fJ59dluFBzfGQsO
        w84X73OEY9j5onCScww7wjsnHhHPxCQUzqWPCS7APOHw/kCeB346yXglzvnCIfMhncEx7Hwh/Fb2QQE/
        k8fc4zIE6J9Rli8Z34Cl1fCHP3JnitnON0N4bwqDY9j5MsNPTe6wCsA70careFu6+JZVxYaMdLDYvYf3
        WNiPAjqX4UoE8I/A/EKl4KJtiPe/pNZCnz5eY72Hz2T47YYHyuuWLyLxMTG7BPw4ZGifkwmn9DmvdpLz
        jI0k51vh1fhG2uePSJ/fz9wHt0nBXcs9DJdIwZ3NOw4dJOzHppy2aLX9Jhwxw8nBYgwZCU4LzgxvTRhu
        SYEsTziPAceCU52zVkvEuaUL7PKIRyr/jDKGDGs1Xu1G2Dm8LW7YZVbc/4wG17dIE06FY6uxnNvD4xVn
        zBTY/djc53iqmeHykPnnApQNyVnPVyRsXCcCTSoFyW6Y7Pt/AJohIq2XwdQoAAAAAElFTkSuQmCC
</value>
  </data>
</root>