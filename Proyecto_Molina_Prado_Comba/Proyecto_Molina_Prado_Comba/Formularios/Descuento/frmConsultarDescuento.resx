<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnVolver.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAhCAYAAAC4JqlRAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA6/AAAOvwE4BVMkAAAD8ElE
        QVRYR8WV2W9MURzH/R2qexsaoXu1OqalaEvqwVLLQ1sPJUIlQmkfShRNENoEIfRBiKUSsUW0D1oeEOsL
        RQixxlbThmJmOnd+fr+z3HvuMjO3SHySpk3PPffzPef+fueMgf/MXwTQxG8krPw9SkYVQHvjhdDjaRC6
        44FQbzGMXCyCkdOFMNI5BUbaCyC4LR+Cm3LF0+6IGSDsXwearwS0tw7yE4p8O5cHV+dAsC4bAguyxBui
        EzWANlzK5U4rJ/lhB3ktlwfmZIK/Mhv8FTnibc5EDOBKvie2/Fd5LvycVSDeascxgE1+O4J8a54r+c+y
        Ivhe6hFvN2ML4Ci/OtVZ3uhe/t1bCkPFM4XFwBRAG54B2iDK36H8KcrvobwPV34J5Wq1y21fnoY/KF8k
        5VmGfHY+/CD5dA9885bAkKcMfIUV8K15p7BxzAFITtVulZ+yy7VzHWIWuJYP5FfBp+wFYhZHD6DLnzjI
        jwh5lD435AWO8i/585j8w+Ql8C6jVsxSA0j53RhyLSQmaPrKJW7lr9NWiBlKAFdyBWvBSYbLvM7ySUt1
        +YvEteJpESD0BFcv5CGqdqt8oyHQurvs1S5WLgle7rbLJ9Tp8mdjG6F//Bb2LA+gyk9GlgfKUyzyPNu2
        q6jyV2krdfnDcc1wL2Eze4YHUOXyeLXIg9V5djn2uembF9O2V+ILxe2ohSPKbyS1skdYgFjfPDA/077t
        8pCJUHB6iHBYlz9C+f2EFibvTWljwzxAF8qpzztQTn3ejKdcg7hEhgaEXO1zZeUlJJ8BviLR5znzsdoX
        Y8HV8PnI87gNTP4gvgVuJm6FvuQ26E7dxcZ4AFXexOV0pTIGBxwL7seyaj6ODBZVKnJqtRosuHoxCvrK
        Vfn59HY2xgN0TDHka7g8sFD0NwWwyJ0w5NRq9fAyqUGMAJfjtqvys9mH2BgLQFjltO0M34Bt2yVUcLRy
        iexzktO2S5gcv7mUd43fJ0bUAFKu3GoMDODUal8zPPAlDwsOVy5h8kQup22XkPxK6m5dfiyDr54wAljk
        tO0M31eTnFqN+Jw+XT9eJSR/NpbLadslVvmRiZ1iRAlAWFstGh9TyvXjNRZcvt8mJ0wB/HNzTQUXjffx
        VfBWHK+xUOU9jdfFfzmmAASX430+sxCG9T7HQ8bU58at9jJpDX7z9dAf18T6/Ba22rXkHdCDBXchfS+c
        wW0/nnEQOlF+YNJRYTGwBSBscjzhHOWs4KzyNtdywjEA4UZOBWeVU6u5lRMRAxC6XFS7VS6PV7O83bWc
        iBqAGFzVGlFOrRZN7oaYAVSscrrVrHL1kHHDqAKYwLteEg4Zf4+WPw/wTwD4DZohIq0DNRtyAAAAAElF
        TkSuQmCC
</value>
  </data>
</root>